(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{293:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"chapter13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chapter13"}},[t._v("#")]),t._v(" Chapter13")]),t._v(" "),a("h2",{attrs:{id:"集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1204/image-20220309165013379.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"priorityqueue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priorityqueue"}},[t._v("#")]),t._v(" PriorityQueue")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("compare")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("升序")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("降序")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("o1 < o2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("return -1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("return 1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("o1 = o2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("return 0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("return 0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("o1 > o2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("return 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("return -1")])])])]),t._v(" "),a("h2",{attrs:{id:"deque"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deque"}},[t._v("#")]),t._v(" Deque")]),t._v(" "),a("p",[t._v("ArrayDeque 底层使用"),a("strong",[t._v("循环数组")]),t._v("实现，任何一点都可以看成起点或终点，其中的 head 不一定比 tail 小，不允许元素为空，"),a("strong",[t._v("线程不安全")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"用做-fifo-队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用做-fifo-队列"}},[t._v("#")]),t._v(" 用做 FIFO 队列")]),t._v(" "),a("p",[t._v("向 deque 尾部添加，从头部删除元素")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("Queue Method")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Equival Deque Method")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("offer(e)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("offerLast(e);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("队尾插入元素，失败返回 false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("poll()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("pollFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取并删除队首元素，失败返回 null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("peek()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("peekFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取不删除队首元素，失败返回 null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("add(e)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("addLast(e)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("队尾插入元素，失败抛出异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("remove()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("removeFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取并删除队首元素，失败抛出异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("element()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("getFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取不删除队首元素，失败抛出异常")])])])]),t._v(" "),a("h3",{attrs:{id:"用做-lifo-栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用做-lifo-栈"}},[t._v("#")]),t._v(" 用做 LIFO 栈")]),t._v(" "),a("p",[t._v("向 deque 头部添加，从头部删除元素")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("Stack Method")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Equival Deque Method")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("push(e)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("addFirst(e)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("栈顶添加元素，失败抛出异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("pop()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("removeFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取并删除栈顶元素，失败抛异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("peek()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("getFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取不删除栈顶元素，失败抛异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("~")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("offerFirst(e)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("栈顶添加元素，失败返回 false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("~")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("pollFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取并删除栈顶元素，失败返回 null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("~")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("peekFirst()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取不删除栈顶元素，失败返回 null")])])])]),t._v(" "),a("p",[t._v("集合的简介，点击"),a("a",{attrs:{href:"https://blog.csdn.net/qq_39683227/article/details/119322662?spm=1001.2014.3001.5501#_31",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"集合选型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合选型"}},[t._v("#")]),t._v(" 集合选型")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1204/%E9%9B%86%E5%90%88%E9%80%89%E5%9E%8B.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"collection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[t._v("#")]),t._v(" Collection")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Collection实现子类可以存放多个元素，每个元素可以是"),a("strong",[t._v("Object")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("Collection的实现类，可存放重复的元素，有些不可以。")])]),t._v(" "),a("li",[a("p",[t._v("Collection的实现类，有的是有序的（"),a("strong",[t._v("List")]),t._v("），有的是无序的（"),a("strong",[t._v("Set")]),t._v("）。")])]),t._v(" "),a("li",[a("p",[t._v("Collection接口没有直接的实现子类，是通过它的子接口 Set 和 List 来实现的。")])])]),t._v(" "),a("h3",{attrs:{id:"collection常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collection常用方法"}},[t._v("#")]),t._v(" Collection常用方法")]),t._v(" "),a("blockquote",[a("p",[t._v("add、remove、contains、addAll、removeAll、containsAll、size、isEmpty、clear")])]),t._v(" "),a("h4",{attrs:{id:"iterator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iterator"}},[t._v("#")]),t._v(" Iterator")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Iterator对象称为迭代器，主要用于遍历Collection集合中的元素。")])]),t._v(" "),a("li",[a("p",[t._v("实现了Collection接口的集合类都有"),a("strong",[t._v("iterator()"),a("strong",[t._v("方法，用以返回一个实现了Iterator接口的")]),t._v("对象")]),t._v("，即一个迭代器。")])]),t._v(" "),a("li",[a("p",[t._v("Iterator的结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1204/Iterator.png",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("Iterator仅用于"),a("strong",[t._v("遍历集合")]),t._v("，Iterator本身不存放对象。如果重新遍历，需要重新调用iterator方法。")])])]),t._v(" "),a("h4",{attrs:{id:"遍历方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历方式"}},[t._v("#")]),t._v(" 遍历方式")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通的for循环")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h2",{attrs:{id:"list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),a("p",[t._v("List集合中元素是有序的，并且可以重复。")]),t._v(" "),a("h3",{attrs:{id:"list常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list常用方法"}},[t._v("#")]),t._v(" List常用方法")]),t._v(" "),a("ul",[a("li",[t._v("add(int index, Object ele)、addAll(int index, Collection eles)、get(int index)、indexOf(Object obj)、lastIndexOf(Object obj)、remove(int index)、set(int index, Object ele)"),a("code",[t._v("替换，在冒泡排序时使用")]),t._v("、subList(int fromIndex, int toIndex)"),a("code",[t._v("[fromIndex, toIndex)")])])]),t._v(" "),a("h3",{attrs:{id:"arraylist-vector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-vector"}},[t._v("#")]),t._v(" ArrayList & Vector")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("ArrayList是用"),a("strong",[t._v("数组")]),t._v("来存储数据的。")])]),t._v(" "),a("li",[a("p",[t._v("ArrayList基本等同于Vector，ArrayList是"),a("strong",[t._v("线程不安全")]),t._v("的，但是执行效率高。多线程建议使用Vector，Vector是线程同步的，线程安全，其中的方法有"),a("strong",[t._v("synchronized")]),t._v("关键字。")])])]),t._v(" "),a("h4",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("底层维护的是一个 "),a("strong",[t._v("Object类型")]),t._v("的数组 elementData[]")])]),t._v(" "),a("li",[a("p",[t._v("使用无参构造器时，初始的elementData的容量为0，第一次添加，扩容为10，如果需要再次扩容，则扩容elementData为"),a("strong",[t._v("1.5")]),t._v("倍。")])]),t._v(" "),a("li",[a("p",[t._v("使用指定大小的构造器时，初始的elementData的容量为指定大小 ，如果需要再次扩容，则扩容elementData为"),a("strong",[t._v("1.5")]),t._v("倍。")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}}),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("底层结构")]),t._v(" "),a("th",[t._v("同步、效率")]),t._v(" "),a("th",[t._v("扩容倍数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ArrayList")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("可变数组 Object[]")]),t._v(" "),a("td",[t._v("不安全，效率高")]),t._v(" "),a("td",[t._v("有参构造，1.5倍。无参构造 第一次10，从第二次开始 1.5倍扩容")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Vector")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("可变数组")]),t._v(" "),a("td",[t._v("安全，效率不高")]),t._v(" "),a("td",[t._v("有参构造，2倍扩容。无参构造，默认10，满后按2倍扩。")])])])]),t._v(" "),a("h3",{attrs:{id:"linkedlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[t._v("#")]),t._v(" LinkedList")]),t._v(" "),a("p",[t._v("底层实现了双向链表和双端队列的特点，"),a("strong",[t._v("线程不安全，没有实现同步。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("底层结构")]),t._v(" "),a("th",[t._v("增删的效率")]),t._v(" "),a("th",[t._v("改查的效率")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ArrayList")]),t._v(" "),a("td",[t._v("可变数组")]),t._v(" "),a("td",[t._v("较低、数组的扩容")]),t._v(" "),a("td",[t._v("较高")])]),t._v(" "),a("tr",[a("td",[t._v("LinkedList")]),t._v(" "),a("td",[a("strong",[t._v("双向链表")])]),t._v(" "),a("td",[t._v("较高、通过链表追加")]),t._v(" "),a("td",[t._v("较低")])])])]),t._v(" "),a("h2",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),a("p",[a("strong",[t._v("无序")]),t._v("，没有索引，但是"),a("strong",[t._v("取出")]),t._v("的顺序是一定的。"),a("strong",[t._v("不允许重复元素")]),t._v("，最多包含一个null。")]),t._v(" "),a("h3",{attrs:{id:"set常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set常用方法"}},[t._v("#")]),t._v(" Set常用方法")]),t._v(" "),a("p",[t._v("Set常用方法与Collection一样。")]),t._v(" "),a("h4",{attrs:{id:"遍历方式-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历方式-2"}},[t._v("#")]),t._v(" 遍历方式")]),t._v(" "),a("ol",[a("li",[t._v("可以使用迭代器")]),t._v(" "),a("li",[t._v("增强for")]),t._v(" "),a("li",[a("strong",[t._v("不能用索引")]),t._v("的方式来获取")])]),t._v(" "),a("h3",{attrs:{id:"hashset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[t._v("#")]),t._v(" HashSet")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("实际上是HashMap，HashMap底层是"),a("strong",[t._v("数组 + 链表 + 红黑树")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("添加一个元素时，先得到"),a("strong",[t._v("哈希值")]),t._v("，将其转成一个索引值。")])]),t._v(" "),a("li",[a("p",[t._v("找到存储表"),a("strong",[t._v("table")]),t._v("，看这个索引位置是否已经存放元素。")])]),t._v(" "),a("li",[a("p",[t._v("没有的话，直接加入。")])]),t._v(" "),a("li",[a("p",[t._v("如果有，调用"),a("strong",[t._v("equals")]),t._v("(每个类都有自己的方法，"),a("strong",[t._v("标准")]),t._v("可以由程序员重写规定)方法比较，如果相同，放弃添加；如果不同，则添加到其后面，形成链表。")])]),t._v(" "),a("li",[a("p",[t._v("在jdk8中，如果一条链表的元素的个数到 "),a("strong",[t._v("TREEIFY_THRESHOLD = 8")]),t._v("，并且table的大小 >= "),a("strong",[t._v("MIN_TREEIFY_CAPACITY = 64")]),t._v("，就会转成红黑树。")])]),t._v(" "),a("li",[a("p",[t._v("第一次添加时，table数组扩容到16，临界值threshold是 16 * 加载因子（loadFactor = 0.75） = 12。")])]),t._v(" "),a("li",[a("p",[t._v("如果table的容量没有到64，按两倍进行扩容。")])])]),t._v(" "),a("h3",{attrs:{id:"linkedhashset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[t._v("#")]),t._v(" LinkedHashSet")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("底层是一个LinkedHashMap，是HashMap的子类，维护的是 "),a("strong",[t._v("数组table + 双向链表")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("根据元素的hashCode 值来决定元素的索引，使用链表维护元素的次序，使得元素看起来是以插入顺序保存的。")])]),t._v(" "),a("li",[a("p",[t._v("不允许添加重复的元素。")])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("LinkedHashSet 加入顺序和取出元素/数据的顺序一致。")])]),t._v(" "),a("li",[a("p",[t._v("LinkedHashSet 底层维护的是一个LinkedHashMap(是HashMap的子类)。")])]),t._v(" "),a("li",[a("p",[t._v("LinkedHashSet 底层结构 (数组table+双向链表)。")])]),t._v(" "),a("li",[a("p",[t._v("添加第一次时，直接将 数组table 扩容到 16 ,存放的结点类型是 LinkedHashMap$Entry。")])]),t._v(" "),a("li",[a("p",[t._v("数组是 "),a("code",[t._v("HashMap$Node[]")]),t._v(" ，存放的元素/数据是 "),a("code",[t._v("LinkedHashMap$Entry")]),t._v("类型。多态数组的知识，是一种多态现象。")])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继承关系是在内部类完成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" before"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" after"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("map保存具有映射关系的 Key-Value。")])]),t._v(" "),a("li",[a("p",[t._v("Map 中的 key 和  value 可以是"),a("strong",[t._v("任何引用类型的数据")]),t._v("，会封装到"),a("code",[t._v("HashMap$Node")]),t._v(" 对象中。因为Node实现了Entry接口，另一个说法是一对 K-V 就是一个Entry。")])]),t._v(" "),a("li",[a("p",[t._v("Map 中的 key 不允许重复，Map 中的 value 可以重复。")])]),t._v(" "),a("li",[a("p",[t._v("当有相同的 key , 添加时就等价于替换。")])]),t._v(" "),a("li",[a("p",[t._v("Map 的 key 可以为 null, value 也可以为null ，注意 "),a("strong",[t._v("key 为null，只能有一个")]),t._v("，value 为null ,可以有多个。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("常用String类作为Map的 key")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("key 和 value 之间存在单向一对一关系，即通过指定的 key 总能找到对应的 value。")])])]),t._v(" "),a("h3",{attrs:{id:"常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),a("ul",[a("li",[t._v("put、remove、get、size、isEmpty、clear、containsKey")])]),t._v(" "),a("h4",{attrs:{id:"遍历方式-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历方式-3"}},[t._v("#")]),t._v(" 遍历方式")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过获得key值集合KeySet,遍历")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),t._v(" set "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keySet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过获得value的集合Values,遍历")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),t._v(" values "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用Entry")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),t._v(" set1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entrySet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" set1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),t._v(" entry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iterator1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" set1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),t._v(" entry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br")])]),a("h3",{attrs:{id:"hashmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[t._v("#")]),t._v(" HashMap")]),t._v(" "),a("p",[t._v("（来自 "),a("strong",[a("a",{attrs:{href:"https://blog.csdn.net/generalfu?spm=1001.2014.3001.5509",target:"_blank",rel:"noopener noreferrer"}},[t._v("小傅哥"),a("OutboundLink")],1)]),t._v(" 的 "),a("a",{attrs:{href:"https://download.csdn.net/download/Yao__Shun__Yu/14932325",target:"_blank",rel:"noopener noreferrer"}},[t._v("面经"),a("OutboundLink")],1),t._v("）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1204/HashMapFlowDiagram.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"扰动函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扰动函数"}},[t._v("#")]),t._v(" 扰动函数")]),t._v(" "),a("p",[t._v("在HashMap中存放元素时，对其哈希值进行了处理，目的是优化散列效果，就是"),a("code",[t._v("java8")]),t._v("中的散列值"),a("strong",[t._v("扰动函数")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("使用扰动函数就是为了增加随机性，让数据元素更加均衡的散列，减少碰撞。")]),t._v(" "),a("h4",{attrs:{id:"负载因子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载因子"}},[t._v("#")]),t._v(" 负载因子")]),t._v(" "),a("p",[t._v("数据越来越多时，选择一个合理的大小下进行扩容，默认值0.75。就是说当阀值容量占了3/4时赶紧扩容，"),a("strong",[t._v("减少Hash碰撞")]),t._v("。同时0.75是一个默认构造值，在创建 HashMap 也可以调整，比如你希望用更多的空间换取时间，可以把负载因子调的更小一些，减少碰撞。")]),t._v(" "),a("h4",{attrs:{id:"扩容元素拆分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩容元素拆分"}},[t._v("#")]),t._v(" 扩容元素拆分")]),t._v(" "),a("p",[t._v("扩容最直接的问题，就是需要把元素拆分到新的数组中。拆分元素的过程中，原"),a("code",[t._v("jdk1.7")]),t._v("中会需要重新计算哈希值，但是到"),a("code",[t._v("jdk1.8")]),t._v("中已经进行优化，不在需要重新计算，提升了拆分的性能。")]),t._v(" "),a("h3",{attrs:{id:"hashtable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashtable"}},[t._v("#")]),t._v(" Hashtable")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("key、value不能为"),a("strong",[t._v("null")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("Hashtable是线程安全的。")])]),t._v(" "),a("li",[a("p",[t._v("底层有数组 "),a("code",[t._v("Hashtable$Entry[]")]),t._v(" 初始化大小为 11，临界值 threshold 8 = 11 * 0.75。")])]),t._v(" "),a("li",[a("p",[t._v("按照 "),a("code",[t._v("int newCapacity = (oldCapacity << 1) + 1;")]),t._v(" 的大小扩容。")])]),t._v(" "),a("li",[a("p",[t._v("执行 方法 "),a("code",[t._v("addEntry(hash, key, value, index);")]),t._v(" 添加 K-V 封装到"),a("code",[t._v("Entry")]),t._v("。")])])]),t._v(" "),a("h3",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Properties可用于从 "),a("code",[t._v("xxx.properties")]),t._v(" 文件中，加载数据到Properties类对象，进行读取和修改。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("xxx.properties")]),t._v(" 文件通常为配置文件。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);