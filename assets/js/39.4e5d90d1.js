(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{303:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"dbms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dbms"}},[t._v("#")]),t._v(" DBMS")]),t._v(" "),s("p",[t._v("DataBase Management System，数据库管理系统。常见的有 MySQL、Oracle、Microsoft SqlServer")]),t._v(" "),s("h3",{attrs:{id:"sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[t._v("#")]),t._v(" SQL")]),t._v(" "),s("p",[t._v("Structured Query Language，结构化查询语言。")]),t._v(" "),s("blockquote",[s("p",[t._v("DBMS 通过 SQL 语句对 DB 中的数据进行增删改查。")]),t._v(" "),s("p",[s("strong",[t._v("分组函数")]),t._v(" 在使用的时候必须先进行分组，然后才能用。如果你没有对数据进行分组，整张表默认为一组。")]),t._v(" "),s("p",[t._v("count(具体字段)：表示统计该字段下所有不为NULL的元素的总数。\ncount(*)：统计表当中的总行数。只要有一行数据,则 count++。")]),t._v(" "),s("p",[t._v("str_to_date 将字符串转换成日期\ndate_format 格式化日期\nformat 设置千分位")])]),t._v(" "),s("h3",{attrs:{id:"备份数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份数据库"}},[t._v("#")]),t._v(" 备份数据库")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("mysqldump -u 用户名 -p 数据库 表1 表n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" d:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("文件名.sql\nmysqldump -u 用户名 -p -B 数据库1 数据库n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" d:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("文件名.sql\n\n恢复数据库\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" d:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("文件名.sql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据类型")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("大小（字节）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("BIT(M)")]),t._v(" "),s("td",[t._v("1 - 64，位类型。M 指定位数，默认1")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("TINYINT [UNSIGNED]")]),t._v(" "),s("td",[t._v("有符号（-128 - 127），无符号（0 - 255）。默认无符号")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("SMALLINT [UNSIGNED]")]),t._v(" "),s("td",[t._v("有符号（-2^15 - 2^15 - 1），无符号（0 - 2^16 - 1）")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("MEDIUMINT [UNSIGNED]")]),t._v(" "),s("td",[t._v("有符号（-2^23 - 2^23 - 1），无符号（0 - 2^24 - 1）")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("INT")]),t._v(" [UNSIGNED]")]),t._v(" "),s("td",[t._v("有符号（-2^31 - 2^31 - 1），无符号（0 - 2^32 - 1）")]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[t._v("BIGINT [UNSIGNED]")]),t._v(" "),s("td",[t._v("有符号（-2^63 - 2^63 - 1），无符号（0 - 2^64 - 1）")]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[t._v("FLOAT [UNSIGNED]")]),t._v(" "),s("td",[t._v("表示小数")]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("DOUBLE")]),t._v(" [UNSIGNED]")]),t._v(" "),s("td",[t._v("表示比 FLOAT 精度更大的小数")]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("DECIMAL")]),t._v("(M, D) [UNSIGNED]")]),t._v(" "),s("td",[t._v("定点数 M （max 65）指定长度，默认10，D （max 30）表示小数点的位数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("CHAR(SIZE)")]),t._v(" "),s("td",[t._v("固定长度字符串，最大 255 "),s("strong",[t._v("字符")]),t._v("，SIZE 表示字符的数量")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("**VARCHAR(**SIZE)")]),t._v(" "),s("td",[t._v("可变长度字符串 （0 - 65535 "),s("strong",[t._v("字节")]),t._v("）")]),t._v(" "),s("td",[t._v("utf8 最大21844字符 1 - 3 个字节用于记录大小。 gbk 最大 32766 字符。")])]),t._v(" "),s("tr",[s("td",[t._v("BLOB LONGBLOB")]),t._v(" "),s("td",[t._v("二进制数据 BLOB （0 - 2^16 - 1），LONGBLOB （0 - 2^32 - 1）")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("TEXT")]),t._v(" LONGTEXT")]),t._v(" "),s("td",[t._v("文本 TEXT （0 - 2^16 - 1），LONGTEXT （0 - 2^32 - 1）")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("DATE")]),t._v(" "),s("td",[t._v("日期类型（YYYY-MM-DD）")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("DATETIME")])]),t._v(" "),s("td",[t._v("（YYYY-MM-DD HH:MM:SS）")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("TIMESTAMP")])]),t._v(" "),s("td",[t._v("TimeStamp 时间戳，自动记录 insert、update操作时间")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),s("p",[t._v("多条 DML 语句联合起来的执行某一个业务逻辑。原子性、一致性、隔离性、持久性。")]),t._v(" "),s("p",[t._v("事务与事务之间的隔离性级别，read uncommitted(脏读问题)\tread committed(不可重复读取数据)\trepeatable read(读取到的数据是幻象，不够真实)\tserializable(最高的隔离级别)")]),t._v(" "),s("h3",{attrs:{id:"视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),s("p",[t._v("视图对象存储在硬盘上，方便，简化开发，利于维护。视图对应的语句只能是DQL语句。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" emp_dept_view "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" dept d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"数据库设计三范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计三范式"}},[t._v("#")]),t._v(" 数据库设计三范式")]),t._v(" "),s("p",[t._v("第一范式：要求任何一张表必须有主键，每一个字段原子性不可再分。一对一，外键唯一。")]),t._v(" "),s("p",[t._v("第二范式：建立在第一范式的基础之上，要求所有非主键字段完全依赖主键，不要产生部分依赖。多对多，三张表，关系表两个外键。")]),t._v(" "),s("p",[t._v("第三范式：建立在第二范式的基础之上，要求所有非主键字段直接依赖主键，不要产生传递依赖。一对多，两张表，多的表加外键。")]),t._v(" "),s("h3",{attrs:{id:"分组查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[t._v("#")]),t._v(" 分组查询")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\n关键字的顺序不能颠倒：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n执行顺序为：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意 ：")]),t._v(" "),s("ul",[s("li",[t._v("在一条 select 语句中，如果有 group by，select 后面只能跟参与分组的字段，以及分组函数。")]),t._v(" "),s("li",[t._v("从某张表中查询数据，先经过 where 条件筛选出有价值的数据，再对这些有价值的数据进行分组，分组之后可以使用 having 继续筛选。select 查询出来，最后排序输出。")])]),t._v(" "),s("h3",{attrs:{id:"字符集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[t._v("#")]),t._v(" 字符集")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Maxlen (字节)")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("ascii")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("latin1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("gb2312")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("gbk")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("utf8")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("3")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("utf8mb4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("4")])])])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("字符集指的是某个字符范围的编码规则。")])]),t._v(" "),s("li",[s("p",[t._v("比较规则是针对某个字符集中的字符比较大小的一种规则。")])]),t._v(" "),s("li",[s("p",[t._v("在MySQL 中，一个字符集可以有若干种比较规则，其中有一个默认的比较规则，一个比较规则必须对应一个\n字符集。")])]),t._v(" "),s("li",[s("p",[t._v("查看MySQL 中查看支持的字符集和比较规则的语句如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" 匹配的模式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" COLLATION "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" 匹配的模式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("MySQL有四个级别的字符集和比较规则，服务器、数据库、表、列。")])])]),t._v(" "),s("h3",{attrs:{id:"存储引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[t._v("#")]),t._v(" 存储引擎")]),t._v(" "),s("p",[t._v("MySQL 服务器上负责对表中数据读取和写入工作的部分，例如 InnoDB 、MyISAM 、Memory 等。真实数据在不同存储引擎中存放的格式一般是不同的。")]),t._v(" "),s("h4",{attrs:{id:"innodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[t._v("#")]),t._v(" InnoDB")]),t._v(" "),s("p",[t._v("将数据划分为若干个页，以页作为磁盘和内存之间交互的基本单位，InnoDB 中页的大小一般为 16 KB。")]),t._v(" "),s("h4",{attrs:{id:"行格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行格式"}},[t._v("#")]),t._v(" 行格式")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("Compact")]),t._v(" 行格式中，把所有变长字段的真实数据占用的字节长度都存放在记录的开头部位，从而形成一个变长字段长度列表，各变长字段数据占用的字节数按照列的顺序"),s("strong",[t._v("逆序")]),t._v("存放。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1204/Compact.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("Dynamic")]),t._v("和"),s("code",[t._v("Compressed")]),t._v("行格式类似于"),s("code",[t._v("Compact")]),t._v("行格式，只不过在处理行溢出数据时有点儿分歧，它们不会在记录的真实数据处存储字符串的前768个字节，而是把所有的字节都存储到其他页面中，只在记录的真实数据处存储其他页面的地址。")]),t._v(" "),s("h4",{attrs:{id:"记录头信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#记录头信息"}},[t._v("#")]),t._v(" 记录头信息")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("大小（bit）")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("预留位1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("没有使用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("预留位2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("没有使用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("delete_mask")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("标记该记录是否被删除")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("min_rec_mask")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("B+树的每层非叶子节点中的最小记录都会添加该标记")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("n_owned")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表示当前记录拥有的记录数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("heap_no")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表示当前记录在记录堆的位置信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("record_type")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表示当前记录的类型， 0 表示普通记录， 1 表示B+树非叶节点记录（目录项记录）， 2 表示最小记录， 3 表示最大记录")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("next_record")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表示下一条记录的相对位置")])])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")]),t._v("："),s("code",[t._v("next_record")]),t._v(" 下一条记录指得并不是按照我们插入顺序的下一条记录，而是按照"),s("code",[t._v("主键")]),t._v("值"),s("code",[t._v("由小到大")]),t._v("的顺序的下一条记录。而且规定 "),s("code",[t._v("Infimum")]),t._v(" 记录（也就是最小记录） 的下一条记录就是本页中主键值最小的用户记录，而本页中主键值最大的用户记录的下一条记录就是 "),s("code",[t._v("Supremum")]),t._v(" 记录（也就是最大记录）。")])]),t._v(" "),s("p",[t._v("不论我们怎么对页中的记录做增删改操作，InnoDB 始终会维护一条记录的单链表，链表中的各个节点是按照主键值由小到大的顺序连接起来的。")]),t._v(" "),s("p",[t._v("当数据页中存在多条"),s("strong",[t._v("被删除掉的记录")]),t._v("时，这些记录的 next_record 属性将会把这些被删除掉的记录组成一个"),s("strong",[t._v("垃圾链表")]),t._v("，以备之后重用这部分存储空间。")]),t._v(" "),s("h3",{attrs:{id:"数据页结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据页结构"}},[t._v("#")]),t._v(" 数据页结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1204/InnoDB.png",alt:""}})]),t._v(" "),s("p",[t._v("Page Directory 由每个组的最后一条记录的地址偏移量（槽）按照顺序存储。对于"),s("strong",[t._v("最小记录")]),t._v("所在的分组只能有 1 条记录，"),s("strong",[t._v("最大记录")]),t._v("所在的分组拥有的记录条数只能在 "),s("strong",[t._v("1~8")]),t._v(" 条之间，剩下的分组中记录的条数范围只能在是 "),s("strong",[t._v("4~8")]),t._v(" 条之间。")]),t._v(" "),s("p",[t._v("在一个数据页中查找指定主键值的记录：")]),t._v(" "),s("ul",[s("li",[t._v("通过二分法确定该记录所在的槽，并找到该槽中主键值最小的记录")]),t._v(" "),s("li",[t._v("通过记录的 "),s("code",[t._v("next_record")]),t._v(" 属性遍历该槽所在的组中的各个记录")])]),t._v(" "),s("h3",{attrs:{id:"b-树索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树索引"}},[t._v("#")]),t._v(" B+ 树索引")]),t._v(" "),s("p",[t._v("各个 InnoDB 数据页面组成一个双向链表，每个数据页中的记录会按照主键值从小到大组成一个单向链表，每个数据页会为存储在里面的记录生成一个"),s("code",[t._v("页目录")]),t._v("，在通过主键查找记录的过程中，先使用二分法在页目录中找到对应的"),s("code",[t._v("槽")]),t._v("，然后遍历该槽对应的分组找到指定的记录。")]),t._v(" "),s("p",[t._v("下一个数据页中用户记录的主键值必须大于上一个页中用户记录的主键值。需要给所有的页建立一个目录项每个页对应一个目录项，每个目录项包含页的记录中"),s("code",[t._v("最小的主键值")]),t._v("（key）以及"),s("code",[t._v("页号")]),t._v("（page_no）。这个目录就是"),s("code",[t._v("索引")]),t._v("。")]),t._v(" "),s("p",[t._v("不论是存放用户记录的数据页，还是存放目录项记录的数据页，我们都把它们存放到 "),s("code",[t._v("B+树")]),t._v(" 这个数据结构中了，所以我们也称这些数据页为节点。实际用户记录其实都存放在 B+ 树的最底层的节点上，这些节点也被称为"),s("code",[t._v("叶子节点")]),t._v("或叶节点，其余用来存放目录项的节点称为"),s("code",[t._v("非叶子节点")]),t._v("或者内节点，其中B+ 树最上边的那个节点称为"),s("code",[t._v("根节点")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("InnoDB 中的索引即数据，数据即索引，而 MyISAM 中却是索引是索引、数据是数据。")])]),t._v(" "),s("h3",{attrs:{id:"分库分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分库分表"}},[t._v("#")]),t._v(" 分库分表")]),t._v(" "),s("p",[t._v("数据量大，分表；并发高，分库。")])])}),[],!1,null,null,null);a.default=n.exports}}]);